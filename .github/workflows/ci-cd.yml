name: CI & CD Pipeline

on:
  push:
    branches: ['**']
  pull_request:
    branches: [main]

jobs:
  code-checks:
    name: 🔮 Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install
      - name: ⬣ Run ESLint
        run: pnpm lint
      - name: ʦ Run TypeScript Check
        run: pnpm typecheck
      - name: 💅 Run Prettier
        run: pnpm format:check

  test:
    name: 🧪 Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install
      - run: pnpm test

  deploy:
    name: 🚀 Deploy to Google Cloud Run
    env:
      ENV_NAME: ${{ github.ref_name == 'main' && 'production' || 'dev' }}
      SUFFIX: ${{ github.ref_name == 'main' && '' || '-dev' }}
    needs: [code-checks, test]
    if: success()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 10

      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile

      - name: 🔐 Auth to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: 📦 Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: 🔑 Docker Auth to GCR
        run: gcloud auth configure-docker

      # --- Backend ---
      - name: 🎯 Upload sourcemaps to Sentry (Backend)
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: institut-teknologi-sepuluh--sr
          SENTRY_PROJECT: todolist-devops
        run: |
          npx sentry-cli releases new ${{ github.sha }}
          npx sentry-cli releases files ${{ github.sha }} upload-sourcemaps dist \
            --url-prefix "~/dist" \
            --rewrite
          npx sentry-cli releases finalize ${{ github.sha }}

      - name: 🐳 Build Backend Docker Image
        run: |
          echo "Building backend image..."
          docker build -f src/app/server/Dockerfile \
            -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/todo-backend$SUFFIX:${{ github.sha }} .
        env:
          SUFFIX: ${{ env.SUFFIX }}

      - name: 📤 Push Backend Docker Image
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/todo-backend$SUFFIX:${{ github.sha }}
        env:
          SUFFIX: ${{ env.SUFFIX }}

      - name: 🚀 Deploy Backend to Cloud Run
        id: deploy-backend
        run: |
          echo "Deploying backend..."
          BACKEND_URL=$(gcloud run deploy todo-backend$SUFFIX \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/todo-backend$SUFFIX:${{ github.sha }} \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --set-env-vars DB_HOST=${{ secrets.DB_HOST }},DB_USER=${{ secrets.DB_USER }},DB_PASSWORD=${{ secrets.DB_PASSWORD }},DB_NAME=${{ secrets.DB_NAME }} \
            --format='value(status.url)')

          echo "BACKEND_URL=$BACKEND_URL" >> $GITHUB_ENV
          echo "backend_url=$BACKEND_URL" >> $GITHUB_OUTPUT
          echo "DEBUG: backend_url = $BACKEND_URL"
        env:
          SUFFIX: ${{ env.SUFFIX }}

      # --- Frontend ---
      - name: 🐳 Build Frontend Docker Image
        run: |
          echo "Building Frontend with BACKEND_URL=${{ steps.deploy-backend.outputs.backend_url }}"
          docker build \
            --build-arg NEXT_PUBLIC_API_URL=${{ steps.deploy-backend.outputs.backend_url }} \
            --build-arg NEXT_PUBLIC_FRONTEND_URL=https://todo-app${{ env.SUFFIX }}-381607765507.asia-southeast2.run.app \
            -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/todo-app${{ env.SUFFIX }}:${{ github.sha }} .
        env:
          SUFFIX: ${{ env.SUFFIX }}

      - name: 📤 Push Frontend Docker Image
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/todo-app$SUFFIX:${{ github.sha }}
        env:
          SUFFIX: ${{ env.SUFFIX }}

      - name: 🚀 Deploy Frontend to Cloud Run
        id: deploy-frontend
        run: |
          FRONTEND_URL=$(gcloud run deploy todo-app$SUFFIX \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/todo-app$SUFFIX:${{ github.sha }} \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --format='value(status.url)')
          echo "frontend_url=${FRONTEND_URL}" >> $GITHUB_OUTPUT
        env:
          SUFFIX: ${{ env.SUFFIX }}

      - name: 🎯 Upload sourcemaps to Sentry (Frontend)
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: institut-teknologi-sepuluh--sr
          SENTRY_PROJECT: todolist-devops
        run: |
          npx sentry-cli releases new ${{ github.sha }}
          npx sentry-cli releases files ${{ github.sha }} upload-sourcemaps .next \
            --url-prefix "~/_next" \
            --rewrite
          npx sentry-cli releases finalize ${{ github.sha }}