name: CI & CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  code-checks:
    name: 🔮 Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install
      - name: ⬣ Run ESLint
        run: pnpm lint
      - name: ʦ Run TypeScript Check
        run: pnpm typecheck
      - name: 💅 Run Prettier
        run: pnpm format:check

  test:
    name: 🧪 Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install
      - run: pnpm test

  deploy:
    name: 🚀 Deploy to Google Cloud Run
    needs: [code-checks, test]
    if: success()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 10

      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile

      - name: 🔐 Auth to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: 📦 Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: 🔑 Docker Auth to GCR
        run: gcloud auth configure-docker

      # --- Frontend ---
      - name: 🐳 Build Frontend Docker Image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/todo-app:${{ github.sha }} .

      - name: 🎯 Upload sourcemaps to Sentry (Frontend)
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: institut-teknologi-sepuluh--sr
          SENTRY_PROJECT: todolist-devops
        run: |
          docker run --rm \
            -e SENTRY_AUTH_TOKEN \
            -e SENTRY_ORG \
            -e SENTRY_PROJECT \
            gcr.io/${{ secrets.GCP_PROJECT_ID }}/todo-app:${{ github.sha }} \
            npx sentry-cli releases new ${{ github.sha }} && \
            npx sentry-cli releases files ${{ github.sha }} upload-sourcemaps .next \
              --url-prefix "~/_next" \
              --rewrite && \
            npx sentry-cli releases finalize ${{ github.sha }}

      - name: 📤 Push Frontend Docker Image
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/todo-app:${{ github.sha }}

      - name: 🚀 Deploy Frontend to Cloud Run
        id: deploy-frontend
        run: |
          FRONTEND_URL=$(gcloud run deploy todo-app \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/todo-app:${{ github.sha }} \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --format='value(status.url)')
          echo "frontend_url=${FRONTEND_URL}" >> $GITHUB_OUTPUT

      # --- Backend ---
      - name: 🐳 Build Backend Docker Image
        run: |
          docker build -f src/app/server/Dockerfile -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/todo-backend:${{ github.sha }} .

      - name: 📤 Push Backend Docker Image
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/todo-backend:${{ github.sha }}

      - name: 🚀 Deploy Backend to Cloud Run
        id: deploy-backend
        run: |
          BACKEND_URL=$(gcloud run deploy todo-backend \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/todo-backend:${{ github.sha }} \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --format='value(status.url)')
          echo "backend_url=${BACKEND_URL}" >> $GITHUB_OUTPUT

      - name: 📦 Create GitHub Deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GH_PAT }}
          env: production
          ref: ${{ github.ref }}

      - name: ✅ Finish GitHub Deployment
        uses: bobheadxi/deployments@v1
        with:
          step: finish
          token: ${{ secrets.GH_PAT }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env: production
          status: success
          env_url: ${{ steps.deploy-frontend.outputs.frontend_url }}